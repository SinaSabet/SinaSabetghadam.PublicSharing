// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PublicSharing.Infrastructure.Persistence;

#nullable disable

namespace PublicSharing.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(PublicSharingDbContext))]
    partial class PublicSharingDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("PublicTweet")
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PublicSharing.Domain.TweetAggregate.Tweet", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("Published")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("PublishedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("varchar(70)");

                    b.HasKey("Id");

                    b.ToTable("tweets", "PublicTweet");
                });

            modelBuilder.Entity("PublicSharing.Domain.UserAggregate.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("users", "PublicTweet");
                });

            modelBuilder.Entity("PublicSharing.Domain.TweetAggregate.Tweet", b =>
                {
                    b.OwnsMany("PublicSharing.Domain.TweetAggregate.HashTags", "HashTags", b1 =>
                        {
                            b1.Property<Guid>("TweetId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(30)
                                .HasColumnType("nvarchar(30)");

                            b1.HasKey("TweetId", "Id");

                            b1.ToTable("HashTags", "PublicTweet");

                            b1.WithOwner()
                                .HasForeignKey("TweetId");
                        });

                    b.OwnsMany("PublicSharing.Domain.TweetAggregate.Like", "Likes", b1 =>
                        {
                            b1.Property<Guid>("TweetId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<DateTime>("LikedAt")
                                .HasColumnType("datetime2");

                            b1.HasKey("TweetId", "Id");

                            b1.ToTable("Like", "PublicTweet");

                            b1.WithOwner()
                                .HasForeignKey("TweetId");
                        });

                    b.OwnsOne("PublicSharing.Domain.UserAggregate.UserId", "UserId", b1 =>
                        {
                            b1.Property<Guid>("TweetId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("Value")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("UserId");

                            b1.HasKey("TweetId");

                            b1.ToTable("tweets", "PublicTweet");

                            b1.WithOwner()
                                .HasForeignKey("TweetId");
                        });

                    b.Navigation("HashTags");

                    b.Navigation("Likes");

                    b.Navigation("UserId")
                        .IsRequired();
                });

            modelBuilder.Entity("PublicSharing.Domain.UserAggregate.User", b =>
                {
                    b.OwnsMany("PublicSharing.Domain.TweetAggregate.TweetId", "TweetIds", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<Guid>("Value")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("TweetId");

                            b1.HasKey("UserId", "Id");

                            b1.ToTable("UserTweetIds", "PublicTweet");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.Navigation("TweetIds");
                });
#pragma warning restore 612, 618
        }
    }
}
